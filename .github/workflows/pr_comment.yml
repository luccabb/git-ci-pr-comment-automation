name: PR Comment CI

on:
  issue_comment:
    types: [created]

permissions:
  statuses: write
  pull-requests: write
  contents: read

jobs:
  trigger-tests:
    if: ${{ github.event.issue.pull_request && (contains(github.event.comment.body, '/bot tests') || contains(github.event.comment.body, '/bot integration tests')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        id: get-pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

  test:
    runs-on: ubuntu-latest
    needs: trigger-tests
    steps:
      - name: Get PR info and set pending status
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Set pending status - this usually works!
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: pr.head.sha,
              state: 'pending',
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: 'Running integration tests...',
              context: 'Integration Tests'
            });
            
            core.setOutput('head_sha', pr.head.sha);
            core.setOutput('head_ref', pr.head.ref);
      
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.head_ref }}

      - name: Run test
        run: |
          echo "Test succeeds"
      
      - name: Set final status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.pr.outputs.head_sha }}',
              state: state,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: `Integration tests ${state}`,
              context: 'Integration Tests'
            });

